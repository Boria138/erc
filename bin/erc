#!/bin/sh
#
# Copyright (C) 2013  Etersoft
# Copyright (C) 2013  Vitaly Lipatov <lav@etersoft.ru>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

PROGDIR=$(dirname $0)
[ "$PROGDIR" = "." ] && PROGDIR=$(pwd)

# will replaced to /usr/share/erc during install
SHAREDIR=$(dirname $0)

load_helper()
{
    local CMD="$SHAREDIR/$1"
    [ -r "$CMD" ] || fatal "Have no $CMD helper file"
    . $CMD
}

load_helper erc-sh-functions

check_tty

# list all supported formats: tar rar and so on
list_formats()
{
	a= patool formats | grep ".* files:" | sed "s/ .*//g"
	echo "tar.gz tar.bz2 tar.xz"
}

# 1.zip -> zip
get_archive_ext()
{
	local i
	for i in $(list_formats) ; do
		local nf=$(basename "$1" .$i)
		[ "$nf" != "$1" ] && echo "$i" && return
	done
	return 1
}

# 1.zip -> 1
get_archive_name()
{
	local ext
	ext=$(get_archive_ext "$1")
	if [ -n "$ext" ] ; then
		basename "$1" .$ext
	else
		echo "$1"
		return 1
	fi
}

# TODO: improve
# TODO: detect by extension as default
get_archive_type()
{
	local aext
	file "$1" | grep -q "Zip archive data" && echo "zip" && return
	file "$1" | grep -q "RAR archive data" && echo "rar" && return
	if aext=$(get_archive_ext "$1") ; then
		echo $aext
		return
	fi
	return 1
}

# 1.zip tar:  -> 1.tar
build_target_name()
{
	[ "${2/:/}" = "$2" ] && echo "$1" && return
	echo $(get_archive_name "$1").${2/:/}
}

phelp()
{
	echo "$Descr
$Usage
 Commands:
$(get_help HELPCMD)

 Options:
$(get_help HELPOPT)
"
}

print_version()
{
        echo "Etersoft archive manager version @VERSION@"
        echo "Copyright (c) Etersoft 2013"
        echo "This program may be freely redistributed under the terms of the GNU AGPLv3."
}

progname="${0##*/}"

Usage="Usage: $progname [options] [<command>] [params]..."
Descr="erc - universal archive manager"

cmd=$1
if get_archive_type "$cmd" >/dev/null ; then
    cmd=extract
else
    shift
fi

# Just printout help if run without args
if [ -z "$cmd" ] ; then
    print_version
    echo
    fatal "Run $ $progname --help for get help"
fi

verbose=--verbose

# TODO: Если программа-архиватор не установлена, предлагать установку с помощью epm

case $cmd in
    -h|--help|help)       # HELPOPT: this help
        phelp
        ;;
    -v|--version)            # HELPOPT: print version
        print_version
        ;;
    a|-a|create|pack)        # HELPCMD: create archive
        # TODO: realize archive addition
        docmd patool $verbose create "$@"
        ;;
    e|x|-e|-x|u|-u|extract|unpack)          # HELPCMD: extract files from archive
        docmd patool $verbose extract "$@"
        ;;
# TODO: realize deletion
#    d|delete)             # HELPCMD: delete file(s) from archive
#        docmd patool delete "$@"
#        ;;
    l|-l|list)               # HELPCMD: list archive contents
        docmd patool $verbose list "$@"
        ;;
    t|-t|test|check)         # HELPCMD: test for archive integrity
        docmd patool $verbose test "$@"
        ;;
    type)                 # HELPCMD: print type of archive
        get_archive_type "$1" || fatal "Can't recognize $1 as archive"
        ;;
    diff)                 # HELPCMD: compare two archive
        # check 2 arg
        docmd patool $verbose diff "$@"
        ;;
    b|-b|bench|benchmark)    # HELPCMD: benchmark
        #assure_cmd 7z
        docmd 7z b
        ;;
#    search)               # HELPCMD:
#        docmd patool $verbose search "$@"
#        ;;
    repack|conv)          # HELPCMD:
        # check 2 arg
        # add support for target zip:
        docmd patool $verbose repack "$1" "$(build_target_name "$1" "$2")"
        ;;
    formats)              # HELPCMD:
        docmd patool formats "$@"
        ;;
    *)
        # TODO: If we have archive in parameter, just unpack it
        fatal "Unknown command $1"
        ;;
esac

